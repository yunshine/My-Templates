{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Arial-BoldMT;\f1\fswiss\fcharset0 ArialMT;\f2\fswiss\fcharset0 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red35\green255\blue6;\red251\green0\blue7;\red185\green122\blue229;
\red31\green33\blue47;\red149\green155\blue194;\red121\green213\blue255;\red184\green230\blue123;\red112\green150\blue255;
\red253\green135\blue156;}
{\*\expandedcolortbl;;\cssrgb\c0\c100000\c0;\cssrgb\c100000\c12195\c0;\cssrgb\c78039\c57255\c91765;
\cssrgb\c16078\c17647\c24314;\cssrgb\c65098\c67451\c80392;\cssrgb\c53725\c86667\c100000;\cssrgb\c76471\c90980\c55294;\cssrgb\c50980\c66667\c100000;
\cssrgb\c100000\c61176\c67451;}
{\info
{\author Yun Chung}}\margl1440\margr1440\vieww27400\viewh21440\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs36 \cf0 *** MongoDB and Mongoose Instructions ***\

\f1\b0\fs24  
\fs34 \
*** Install MongoDB ***\
npm install mongodb --save\
		... ??? npm install mongodb-core kerberos node-gyp bson --save \
\
*** Install mongoose ***\
npm install mongoose --save\
\
\
*** 
\f0\b\fs38 \cb2 to start
\f1\b0\fs34 \cb1 ; you need to keep this running in the background ***\
brew services run mongodb-community\
\
*** 
\f0\b\fs38 \cb3 to stop
\f1\b0\fs34 \cb1 ... ***\
brew services stop mongodb-community
\fs36 \
\
\
\

\f0\b *** Basic MongoDB Commands ***\

\f1\b0 mongo: starts a mongo console to test and debug (analogous to a Javascript console)\
	*** in mongo console ***\
		help: shows all commands\
		show dbs: shows all databases\
		use: uses a database, or creates and uses a database if it doesn't exist\
		show collections: shows all the collections in the database that you are using/that you are currently in\
		db.-SOMETHING-.drop(): deletes all data (seeds) in the database\
\
\
db.-SOMETHING-.insert(): inserts data into the -SOMETHING- collection => 
\f0\b\fs38 CREATE
\f1\b0\fs36 \
db.-SOMETHING-.find(): shows everything in that collection => 
\f0\b\fs38 READ
\f1\b0\fs36 \
db.-SOMETHING-.update(\{object for which one you want to update\}, \{$set: \{object for what you want to change or add\}\}): how to 
\f0\b\fs38 UPDATE
\f1\b0\fs36 \
db.-SOMETHING-.remove(\{object for which one you want to update\}): how to 
\f0\b\fs38 DELETE
\f1\b0\fs36 \
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs44 \cf3 *** Set up deployed and development database environments ***\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b0\fs36 \cf0 1) in app.js, use: \
\pard\pardeftab720\sl480\partightenfactor0

\f2\fs32 \cf4 \cb5 \expnd0\expndtw0\kerning0
const\cf6  url \cf7 =\cf6  process\cf7 .\cf6 env\cf7 .\cf6 DATABASEURL \cf7 ||\cf6  \cf7 '\cf8 mongodb://localhost:27017/collocafe\cf7 ';\cf6 \cb1 \
\cb5 mongoose\cf7 .\cf9 connect\cf6 (url\cf7 ,\cf6  \cf7 \{\cf6 \cb1 \
\cb5   useNewUrlParser\cf7 :\cf6  \cf10 true\cf7 ,\cf6 \cb1 \
\cb5   useUnifiedTopology\cf7 :\cf6  \cf10 true\cf7 ,\cf6 \cb1 \
\cf7 \cb5 \}\cf6 )\cb1 \
\cb5   \cf7 .\cf9 then\cf6 (\cf7 ()\cf6  \cf4 =>\cf6  console\cf7 .\cf9 log\cf6 (\cf7 '\cf8 Connected to database!\cf7 '\cf6 ))\cb1 \
\cb5   \cf7 .\cf9 catch\cf6 (error \cf4 =>\cf6  console\cf7 .\cf9 log\cf6 (error\cf7 .\cf6 message))\cf7 ;\cf6 \cb1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\fs36 \cf0 \kerning1\expnd0\expndtw0 \
2) on Heroku, go to settings, config vars, key is DATABASEURL and value is mongodb+srv://yunshine:ilJC8239@cluster0.c4sfn.mongodb.net/collocafe?retryWrites=true&w=majority\
}